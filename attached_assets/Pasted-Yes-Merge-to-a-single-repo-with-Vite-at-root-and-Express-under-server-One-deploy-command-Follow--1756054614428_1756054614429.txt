Yes. Merge to a single repo with Vite at root and Express under /server. One deploy command. Follow exactly.

1) Final layout
/index.html
/src/**            # Vite app
/public/**         # optional
/server/index.js   # Express API + static
/package.json
/.gitignore

2) Root package.json
{
  "name": "skatehubba",
  "private": true,
  "type": "module",
  "engines": { "node": "^20" },
  "scripts": {
    "dev": "NODE_ENV=development concurrently \"vite\" \"nodemon server/index.js\"",
    "build": "vite build",
    "start": "NODE_ENV=production node server/index.js",
    "preview": "vite preview --host 0.0.0.0 --port 3000"
  },
  "dependencies": {
    "express": "^4.19.2",
    "compression": "^1.7.4",
    "sirv": "^2.0.4"
  },
  "devDependencies": {
    "vite": "^5.4.0",
    "concurrently": "^8.2.2",
    "nodemon": "^3.1.4"
  }
}

3) server/index.js
import express from "express";
import compression from "compression";
import { sirv } from "sirv";
import path from "node:path";
import fs from "node:fs";

const app = express();
const isProd = process.env.NODE_ENV === "production";
const dist = path.resolve(process.cwd(), "dist");

// Security basics
app.disable("x-powered-by");
app.use((req, res, next) => {
  res.setHeader("Content-Security-Policy",
    "default-src 'self'; img-src 'self' data:; script-src 'self' https://plausible.io; " +
    "connect-src 'self' https://plausible.io; style-src 'self' 'unsafe-inline'; " +
    "frame-src https://js.stripe.com https://hooks.stripe.com");
  next();
});

app.use(compression());
app.use(express.json());

// Example API
app.post("/api/waitlist", (req, res) => {
  const { email } = req.body || {};
  if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) return res.status(400).json({ ok:false, error:"invalid_email" });
  // TODO: write to DB or sheet. For now: append to file.
  fs.appendFileSync(path.join(process.cwd(), "waitlist.csv"), `${Date.now()},${email}\n`);
  res.json({ ok:true });
});

// Static assets
if (isProd) {
  app.use(sirv(dist, { single: true, etag: true, maxAge: 31536000 }));
  // Fallback to SPA index.html for unmatched routes
  app.get("*", (req, res) => res.sendFile(path.join(dist, "index.html")));
} else {
  // Dev: let Vite serve frontend on 5173; this server is only for /api
  app.get("/", (_req, res) => res.send("Dev API running. Frontend on http://localhost:5173"));
}

const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server on :${port}`));

4) Frontend changes

Keep your existing Vite files at repo root. Do not edit vite.config.ts.

In your form submit, POST to /api/waitlist.

Example:

await fetch("/api/waitlist", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({ email })
});

5) Deploy on Replit

Set run command: npm run build && npm start

Expose port 3000.

Environment: Node 20.

6) Dev locally or on Replit
npm i
npm run dev   # Vite on 5173, API on 3000

7) Common pitfalls eliminated

No dist/server/public confusion. Only /dist.

SPA fallback handled by Express.

Stripe stays as a link. No extra JS load.

Single deploy target. One health check on /:3000.