Email signup: gold-standard implementation

Client (React + Tailwind v4)

<form onSubmit={onSubmit} className="mt-4 grid sm:grid-cols-[1fr_auto] gap-3" noValidate>
  <label htmlFor="email" className="sr-only">Email</label>
  <input id="email" name="email" type="email" required
    autoComplete="email" placeholder="you@example.com"
    className="w-full rounded-xl border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-black" />
  <button type="submit" className="inline-flex items-center rounded-xl bg-black text-white px-4 py-2 font-medium">
    Notify me
  </button>
  <input type="text" name="company" tabIndex={-1} autoComplete="off" className="hidden" aria-hidden="true" />
</form>
<div role="status" aria-live="polite" className="mt-2 text-sm"></div>


Server (Express)

import express from 'express';
import rateLimit from 'express-rate-limit';
import { z } from 'zod';

const app = express();
app.use(express.json({ limit: '32kb' }));
app.use(rateLimit({ windowMs: 60_000, max: 20 }));

const Email = z.object({ email: z.string().email(), company: z.string().optional() });
app.post('/api/subscribe', async (req, res) => {
  const p = Email.safeParse(req.body);
  if (!p.success) return res.status(400).json({ ok:false, msg:'Invalid email' });
  if (p.data.company) return res.status(200).json({ ok:true }); // honeypot
  // TODO: upsert to your list provider (Mailchimp/Resend/Postmark)
  return res.json({ ok:true });
});


UX states

Loading: button shows “Submitting”. Disabled.

Success: “You’re on the list.” Keep the email prefilled for edits.

Error: precise message, not generic.

Above-the-fold layout

Header: logo + “SkateHubba”. Right side: Features, Donate, Join Beta.

Hero: H1, one-sentence value prop, email form, small trust line: “Built with real skaters. Remote SKATE. Legendary spots.”

Visual: single high-contrast image or 10–15s silent loop (webm) showing SKATE challenge UI.

Brand system (simple, fast)

Colors: --brand: 24 95% 50% (orange), --ink: 0 0% 7%, --paper: 0 0% 100%.

Tailwind v4 tokens in CSS:

@import "tailwindcss";
:root { --brand: 24 95% 50%; --ink: 0 0% 7%; --paper: 0 0% 100%; }
.brand { color: hsl(var(--brand)); }


Type: system stack for speed. If you must, one display face loaded rel="preload" as="font" type="font/woff2" crossorigin.